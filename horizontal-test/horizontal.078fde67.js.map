{"version":3,"sources":["node_modules/events/events.js","node_modules/process/browser.js","node_modules/rebound/dist/rebound.js","src/index.ts","horizontal.js"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","module","exports","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","onceWrapper","fired","arguments","removeListener","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","Array","i","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","flags","on","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","keys","key","rawListeners","eventNames","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","array","noop","nextTick","title","env","argv","version","versions","binding","cwd","chdir","dir","umask","global","factory","define","amd","rebound","_onFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","setImmediate","_onFrame$1","callback","onFrame","func","removeFirst","item","idx","indexOf","splice","colorCache","hexToRGB","colorString","normalizedColor","replace","parts","match","r","parseInt","g","b","rgbToHex","rNum","gNum","bNum","toString","util","freeze","_len","outerArgs","_key","_len2","innerArgs","_key2","extend","source","hasOwnProperty","mapValueInRange","fromLow","fromHigh","toLow","toHigh","MathUtil","interpolateColor","val","startColorStr","endColorStr","asRGB","startColor","endColor","Math","floor","degreesToRadians","deg","PI","radiansToDegrees","rad","tensionFromOrigamiValue","oValue","frictionFromOrigamiValue","OrigamiValueConverter","origamiValueFromTension","tension","origamiFromFriction","friction","classCallCheck","instance","Constructor","_extends","assign","AnimationLooper","springSystem","getSpringSystem","loop","Date","now","SimulationLooper","timestep","time","running","getIsIdle","SteppingSimulationLooper","step","Loopers","BouncyConversion","bounciness","speed","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","startValue","endValue","start","end","linearInterpolation","t","b3Friction1","x","pow","b3Friction2","b3Friction3","SpringConfig","fromOrigamiTensionAndFriction","fromBouncinessAndSpeed","bouncyConversion","coastingConfigWithOrigamiFriction","DEFAULT_ORIGAMI_SPRING_CONFIG","PhysicsState","velocity","Spring","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_id","_ID","_springSystem","destroy","deregisterSpring","getId","setSpringConfig","springConfig","_springConfig","getSpringConfig","setCurrentValue","currentValue","skipSetAtRest","setAtRest","notifyPositionUpdated","getStartValue","getCurrentValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","abs","setEndValue","isAtRest","activateSpring","onChange","onSpringEndStateChange","getEndValue","setVelocity","getVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","advance","realDeltaTime","adjustedDeltaTime","MAX_DELTA_TIME_SEC","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dvdt","SOLVER_TIMESTEP_SEC","_interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringUpdate","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","getListeners","listenerToRemove","currentValueIsApproximately","SpringSystem","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","setLooper","createSpring","createSpringWithConfig","createSpringWithBouncinessAndSpeed","spring","registerSpring","getSpringById","id","getAllSprings","vals","deltaTime","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","HorizontalScroll"],"mappings":"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","file":"horizontal.078fde67.js","sourceRoot":"..","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.rebound = factory());\n}(this, (function () { 'use strict';\n\nvar _onFrame = void 0;\nif (typeof window !== 'undefined') {\n  _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;\n}\n\nif (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n  _onFrame = setImmediate;\n}\n\n_onFrame = _onFrame || function (callback) {\n  window.setTimeout(callback, 1000 / 60);\n};\n\nvar _onFrame$1 = _onFrame;\n\n/* eslint-disable flowtype/no-weak-types */\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\n// Bind a function to a context object.\nfunction bind(func, context) {\n  for (var _len = arguments.length, outerArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    outerArgs[_key - 2] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, innerArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      innerArgs[_key2] = arguments[_key2];\n    }\n\n    func.apply(context, concat.call(outerArgs, slice.call(innerArgs)));\n  };\n}\n\n// Add all the properties in the source to the target.\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\n// Cross browser/node timer functions.\nfunction onFrame(func) {\n  return _onFrame$1(func);\n}\n\n// Lop off the first occurence of the reference in the Array.\nfunction removeFirst(array, item) {\n  var idx = array.indexOf(item);\n  idx !== -1 && array.splice(idx, 1);\n}\n\nvar colorCache = {};\n/**\n * Converts a hex-formatted color string to its rgb-formatted equivalent. Handy\n * when performing color tweening animations\n * @public\n * @param colorString A hex-formatted color string\n * @return An rgb-formatted color string\n */\nfunction hexToRGB(colorString) {\n  if (colorCache[colorString]) {\n    return colorCache[colorString];\n  }\n  var normalizedColor = colorString.replace('#', '');\n  if (normalizedColor.length === 3) {\n    normalizedColor = normalizedColor[0] + normalizedColor[0] + normalizedColor[1] + normalizedColor[1] + normalizedColor[2] + normalizedColor[2];\n  }\n  var parts = normalizedColor.match(/.{2}/g);\n  if (!parts || parts.length < 3) {\n    throw new Error('Expected a color string of format #rrggbb');\n  }\n\n  var ret = {\n    r: parseInt(parts[0], 16),\n    g: parseInt(parts[1], 16),\n    b: parseInt(parts[2], 16)\n  };\n\n  colorCache[colorString] = ret;\n  return ret;\n}\n\n/**\n * Converts a rgb-formatted color string to its hex-formatted equivalent. Handy\n * when performing color tweening animations\n * @public\n * @param colorString An rgb-formatted color string\n * @return A hex-formatted color string\n */\nfunction rgbToHex(rNum, gNum, bNum) {\n  var r = rNum.toString(16);\n  var g = gNum.toString(16);\n  var b = bNum.toString(16);\n  r = r.length < 2 ? '0' + r : r;\n  g = g.length < 2 ? '0' + g : g;\n  b = b.length < 2 ? '0' + b : b;\n  return '#' + r + g + b;\n}\n\nvar util = Object.freeze({\n\tbind: bind,\n\textend: extend,\n\tonFrame: onFrame,\n\tremoveFirst: removeFirst,\n\thexToRGB: hexToRGB,\n\trgbToHex: rgbToHex\n});\n\n/**\n * This helper function does a linear interpolation of a value from\n * one range to another. This can be very useful for converting the\n * motion of a Spring to a range of UI property values. For example a\n * spring moving from position 0 to 1 could be interpolated to move a\n * view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n * position of the `Spring` just needs to be run through this method\n * taking its input range in the _from_ parameters with the property\n * animation range in the _to_ parameters.\n * @public\n */\nfunction mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {\n  var fromRangeSize = fromHigh - fromLow;\n  var toRangeSize = toHigh - toLow;\n  var valueScale = (value - fromLow) / fromRangeSize;\n  return toLow + valueScale * toRangeSize;\n}\n\n/**\n * Interpolate two hex colors in a 0 - 1 range or optionally provide a\n * custom range with fromLow,fromHight. The output will be in hex by default\n * unless asRGB is true in which case it will be returned as an rgb string.\n *\n * @public\n * @param asRGB Whether to return an rgb-style string\n * @return A string in hex color format unless asRGB is true, in which case a string in rgb format\n */\nfunction interpolateColor(val, startColorStr, endColorStr) {\n  var fromLow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var fromHigh = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var asRGB = arguments[5];\n\n  var startColor = hexToRGB(startColorStr);\n  var endColor = hexToRGB(endColorStr);\n  var r = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));\n  var g = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));\n  var b = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));\n  if (asRGB) {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else {\n    return rgbToHex(r, g, b);\n  }\n}\n\nfunction degreesToRadians(deg) {\n  return deg * Math.PI / 180;\n}\n\nfunction radiansToDegrees(rad) {\n  return rad * 180 / Math.PI;\n}\n\nvar MathUtil = Object.freeze({\n\tmapValueInRange: mapValueInRange,\n\tinterpolateColor: interpolateColor,\n\tdegreesToRadians: degreesToRadians,\n\tradiansToDegrees: radiansToDegrees\n});\n\n// Math for converting from\n// [Origami](http://facebook.github.io/origami/) to\n// [Rebound](http://facebook.github.io/rebound).\n// You mostly don't need to worry about this, just use\n// SpringConfig.fromOrigamiTensionAndFriction(v, v);\n\nfunction tensionFromOrigamiValue(oValue) {\n  return (oValue - 30.0) * 3.62 + 194.0;\n}\n\nfunction origamiValueFromTension(tension) {\n  return (tension - 194.0) / 3.62 + 30.0;\n}\n\nfunction frictionFromOrigamiValue(oValue) {\n  return (oValue - 8.0) * 3.0 + 25.0;\n}\n\nfunction origamiFromFriction(friction) {\n  return (friction - 25.0) / 3.0 + 8.0;\n}\n\nvar OrigamiValueConverter = Object.freeze({\n\ttensionFromOrigamiValue: tensionFromOrigamiValue,\n\torigamiValueFromTension: origamiValueFromTension,\n\tfrictionFromOrigamiValue: frictionFromOrigamiValue,\n\torigamiFromFriction: origamiFromFriction\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar AnimationLooper = function () {\n  function AnimationLooper() {\n    classCallCheck(this, AnimationLooper);\n    this.springSystem = null;\n  }\n\n  AnimationLooper.prototype.run = function run() {\n    var springSystem = getSpringSystem.call(this);\n\n    onFrame(function () {\n      springSystem.loop(Date.now());\n    });\n  };\n\n  return AnimationLooper;\n}();\n\n/**\n * Resolves the SpringSystem to a resting state in a\n * tight and blocking loop. This is useful for synchronously generating\n * pre-recorded animations that can then be played on a timing loop later.\n * Sometimes this lead to better performance to pre-record a single spring\n * curve and use it to drive many animations; however, it can make dynamic\n * response to user input a bit trickier to implement.\n * @public\n */\nvar SimulationLooper = function () {\n  function SimulationLooper(timestep) {\n    classCallCheck(this, SimulationLooper);\n    this.springSystem = null;\n    this.time = 0;\n    this.running = false;\n\n    this.timestep = timestep || 16.667;\n  }\n\n  SimulationLooper.prototype.run = function run() {\n    var springSystem = getSpringSystem.call(this);\n\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n    while (!springSystem.getIsIdle()) {\n      springSystem.loop(this.time += this.timestep);\n    }\n    this.running = false;\n  };\n\n  return SimulationLooper;\n}();\n\n/**\n * Resolves the SpringSystem one step at a\n * time controlled by an outside loop. This is useful for testing and\n * verifying the behavior of a SpringSystem or if you want to control your own\n * timing loop for some reason e.g. slowing down or speeding up the\n * simulation.\n * @public\n */\nvar SteppingSimulationLooper = function () {\n  function SteppingSimulationLooper() {\n    classCallCheck(this, SteppingSimulationLooper);\n    this.springSystem = null;\n    this.time = 0;\n    this.running = false;\n  }\n\n  SteppingSimulationLooper.prototype.run = function run() {}\n  // this.run is NOOP'd here to allow control from the outside using\n  // this.step.\n\n\n  // Perform one step toward resolving the SpringSystem.\n  ;\n\n  SteppingSimulationLooper.prototype.step = function step(timestep) {\n    var springSystem = getSpringSystem.call(this);\n    springSystem.loop(this.time += timestep);\n  };\n\n  return SteppingSimulationLooper;\n}();\n\nfunction getSpringSystem() {\n  if (this.springSystem == null) {\n    throw new Error('cannot run looper without a springSystem');\n  }\n  return this.springSystem;\n}\n\n\n\nvar Loopers = Object.freeze({\n\tAnimationLooper: AnimationLooper,\n\tSimulationLooper: SimulationLooper,\n\tSteppingSimulationLooper: SteppingSimulationLooper\n});\n\n/**\n * Provides math for converting from Origami PopAnimation\n * config values to regular Origami tension and friction values. If you are\n * trying to replicate prototypes made with PopAnimation patches in Origami,\n * then you should create your springs with\n * SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n * internally to create a spring to match the provided PopAnimation\n * configuration from Origami.\n */\nvar BouncyConversion = function () {\n  function BouncyConversion(bounciness, speed) {\n    classCallCheck(this, BouncyConversion);\n\n    this.bounciness = bounciness;\n    this.speed = speed;\n\n    var b = this.normalize(bounciness / 1.7, 0, 20.0);\n    b = this.projectNormal(b, 0.0, 0.8);\n    var s = this.normalize(speed / 1.7, 0, 20.0);\n\n    this.bouncyTension = this.projectNormal(s, 0.5, 200);\n    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);\n  }\n\n  BouncyConversion.prototype.normalize = function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  };\n\n  BouncyConversion.prototype.projectNormal = function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  };\n\n  BouncyConversion.prototype.linearInterpolation = function linearInterpolation(t, start, end) {\n    return t * end + (1.0 - t) * start;\n  };\n\n  BouncyConversion.prototype.quadraticOutInterpolation = function quadraticOutInterpolation(t, start, end) {\n    return this.linearInterpolation(2 * t - t * t, start, end);\n  };\n\n  BouncyConversion.prototype.b3Friction1 = function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  };\n\n  BouncyConversion.prototype.b3Friction2 = function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  };\n\n  BouncyConversion.prototype.b3Friction3 = function b3Friction3(x) {\n    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n  };\n\n  BouncyConversion.prototype.b3Nobounce = function b3Nobounce(tension) {\n    var friction = 0;\n    if (tension <= 18) {\n      friction = this.b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      friction = this.b3Friction2(tension);\n    } else {\n      friction = this.b3Friction3(tension);\n    }\n    return friction;\n  };\n\n  return BouncyConversion;\n}();\n\n/**\n * Maintains a set of tension and friction constants\n * for a Spring. You can use fromOrigamiTensionAndFriction to convert\n * values from the [Origami](http://facebook.github.io/origami/)\n * design tool directly to Rebound spring constants.\n * @public\n */\n\nvar SpringConfig = function () {\n\n  /**\n   * Convert an origami Spring tension and friction to Rebound spring\n   * constants. If you are prototyping a design with Origami, this\n   * makes it easy to make your springs behave exactly the same in\n   * Rebound.\n   * @public\n   */\n  SpringConfig.fromOrigamiTensionAndFriction = function fromOrigamiTensionAndFriction(tension, friction) {\n    return new SpringConfig(tensionFromOrigamiValue(tension), frictionFromOrigamiValue(friction));\n  };\n\n  /**\n   * Convert an origami PopAnimation Spring bounciness and speed to Rebound\n   * spring constants. If you are using PopAnimation patches in Origami, this\n   * utility will provide springs that match your prototype.\n   * @public\n   */\n\n\n  SpringConfig.fromBouncinessAndSpeed = function fromBouncinessAndSpeed(bounciness, speed) {\n    var bouncyConversion = new BouncyConversion(bounciness, speed);\n    return SpringConfig.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);\n  };\n\n  /**\n   * Create a SpringConfig with no tension or a coasting spring with some\n   * amount of Friction so that it does not coast infininitely.\n   * @public\n   */\n\n\n  SpringConfig.coastingConfigWithOrigamiFriction = function coastingConfigWithOrigamiFriction(friction) {\n    return new SpringConfig(0, frictionFromOrigamiValue(friction));\n  };\n\n  function SpringConfig(tension, friction) {\n    classCallCheck(this, SpringConfig);\n\n    this.tension = tension;\n    this.friction = friction;\n  }\n\n  return SpringConfig;\n}();\n\nSpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\n/**\n * Consists of a position and velocity. A Spring uses\n * this internally to keep track of its current and prior position and\n * velocity values.\n */\nvar PhysicsState = function PhysicsState() {\n  classCallCheck(this, PhysicsState);\n  this.position = 0;\n  this.velocity = 0;\n};\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\n\nvar Spring = function () {\n  function Spring(springSystem) {\n    classCallCheck(this, Spring);\n    this.listeners = [];\n    this._startValue = 0;\n    this._currentState = new PhysicsState();\n    this._displacementFromRestThreshold = 0.001;\n    this._endValue = 0;\n    this._overshootClampingEnabled = false;\n    this._previousState = new PhysicsState();\n    this._restSpeedThreshold = 0.001;\n    this._tempState = new PhysicsState();\n    this._timeAccumulator = 0;\n    this._wasAtRest = true;\n\n    this._id = 's' + Spring._ID++;\n    this._springSystem = springSystem;\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n\n\n  Spring.prototype.destroy = function destroy() {\n    this.listeners = [];\n    this._springSystem.deregisterSpring(this);\n  };\n\n  /**\n   * Get the id of the spring, which can be used to retrieve it from\n   * the SpringSystems it participates in later.\n   * @public\n   */\n\n\n  Spring.prototype.getId = function getId() {\n    return this._id;\n  };\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n\n\n  Spring.prototype.setSpringConfig = function setSpringConfig(springConfig) {\n    this._springConfig = springConfig;\n    return this;\n  };\n\n  /**\n   * Retrieve the SpringConfig used by this Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getSpringConfig = function getSpringConfig() {\n    return this._springConfig;\n  };\n\n  /**\n   * Set the current position of this Spring. Listeners will be updated\n   * with this value immediately. If the rest or `endValue` is not\n   * updated to match this value, then the spring will be dispalced and\n   * the SpringSystem will start to loop to restore the spring to the\n   * `endValue`.\n   *\n   * A common pattern is to move a Spring around without animation by\n   * calling.\n   *\n   * ```\n   * spring.setCurrentValue(n).setAtRest();\n   * ```\n   *\n   * This moves the Spring to a new position `n`, sets the endValue\n   * to `n`, and removes any velocity from the `Spring`. By doing\n   * this you can allow the `SpringListener` to manage the position\n   * of UI elements attached to the spring even when moving without\n   * animation. For example, when dragging an element you can\n   * update the position of an attached view through a spring\n   * by calling `spring.setCurrentValue(x)`. When\n   * the gesture ends you can update the Springs\n   * velocity and endValue\n   * `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n   * to cause it to naturally animate the UI element to the resting\n   * position taking into account existing velocity. The codepaths for\n   * synchronous movement and spring driven animation can\n   * be unified using this technique.\n   * @public\n   */\n\n\n  Spring.prototype.setCurrentValue = function setCurrentValue(currentValue, skipSetAtRest) {\n    this._startValue = currentValue;\n    this._currentState.position = currentValue;\n    if (!skipSetAtRest) {\n      this.setAtRest();\n    }\n    this.notifyPositionUpdated(false, false);\n    return this;\n  };\n\n  /**\n   * Get the position that the most recent animation started at. This\n   * can be useful for determining the number off oscillations that\n   * have occurred.\n   * @public\n   */\n\n\n  Spring.prototype.getStartValue = function getStartValue() {\n    return this._startValue;\n  };\n\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentValue = function getCurrentValue() {\n    return this._currentState.position;\n  };\n\n  /**\n   * Get the absolute distance of the Spring from its resting endValue\n   * position.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentDisplacementDistance = function getCurrentDisplacementDistance() {\n    return this.getDisplacementDistanceForState(this._currentState);\n  };\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n\n\n  Spring.prototype.getDisplacementDistanceForState = function getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position);\n  };\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n\n  Spring.prototype.setEndValue = function setEndValue(endValue) {\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this;\n    }\n    this._startValue = this.getCurrentValue();\n    this._endValue = endValue;\n    this._springSystem.activateSpring(this.getId());\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      var onChange = listener.onSpringEndStateChange;\n      onChange && onChange(this);\n    }\n    return this;\n  };\n\n  /**\n   * Retrieve the endValue or resting position of this spring.\n   * @public\n   */\n\n\n  Spring.prototype.getEndValue = function getEndValue() {\n    return this._endValue;\n  };\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n\n\n  Spring.prototype.setVelocity = function setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this;\n    }\n    this._currentState.velocity = velocity;\n    this._springSystem.activateSpring(this.getId());\n    return this;\n  };\n\n  /**\n   * Get the current velocity of the Spring, in pixels per second.\n   * @public\n   */\n\n\n  Spring.prototype.getVelocity = function getVelocity() {\n    return this._currentState.velocity;\n  };\n\n  /**\n   * Set a threshold value for the movement speed of the Spring below\n   * which it will be considered to be not moving or resting.\n   * @public\n   */\n\n\n  Spring.prototype.setRestSpeedThreshold = function setRestSpeedThreshold(restSpeedThreshold) {\n    this._restSpeedThreshold = restSpeedThreshold;\n    return this;\n  };\n\n  /**\n   * Retrieve the rest speed threshold for this Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getRestSpeedThreshold = function getRestSpeedThreshold() {\n    return this._restSpeedThreshold;\n  };\n\n  /**\n   * Set a threshold value for displacement below which the Spring\n   * will be considered to be not displaced i.e. at its resting\n   * `endValue`.\n   * @public\n   */\n\n\n  Spring.prototype.setRestDisplacementThreshold = function setRestDisplacementThreshold(displacementFromRestThreshold) {\n    this._displacementFromRestThreshold = displacementFromRestThreshold;\n  };\n\n  /**\n   * Retrieve the rest displacement threshold for this spring.\n   * @public\n   */\n\n\n  Spring.prototype.getRestDisplacementThreshold = function getRestDisplacementThreshold() {\n    return this._displacementFromRestThreshold;\n  };\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n\n\n  Spring.prototype.setOvershootClampingEnabled = function setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled;\n    return this;\n  };\n\n  /**\n   * Check if overshoot clamping is enabled for this spring.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershootClampingEnabled = function isOvershootClampingEnabled() {\n    return this._overshootClampingEnabled;\n  };\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershooting = function isOvershooting() {\n    var start = this._startValue;\n    var end = this._endValue;\n    return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);\n  };\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.advance = function advance(time, realDeltaTime) {\n    var isAtRest = this.isAtRest();\n\n    if (isAtRest && this._wasAtRest) {\n      return;\n    }\n\n    var adjustedDeltaTime = realDeltaTime;\n    if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n    }\n\n    this._timeAccumulator += adjustedDeltaTime;\n\n    var tension = this._springConfig.tension;\n    var friction = this._springConfig.friction;\n    var position = this._currentState.position;\n    var velocity = this._currentState.velocity;\n    var tempPosition = this._tempState.position;\n    var tempVelocity = this._tempState.velocity;\n    var aVelocity = void 0;\n    var aAcceleration = void 0;\n    var bVelocity = void 0;\n    var bAcceleration = void 0;\n    var cVelocity = void 0;\n    var cAcceleration = void 0;\n    var dVelocity = void 0;\n    var dAcceleration = void 0;\n    var dxdt = void 0;\n    var dvdt = void 0;\n\n    while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n      if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position;\n        this._previousState.velocity = velocity;\n      }\n\n      aVelocity = velocity;\n      aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;\n\n      tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      bVelocity = tempVelocity;\n      bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      cVelocity = tempVelocity;\n      cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC;\n      tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC;\n      dVelocity = tempVelocity;\n      dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n      dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\n\n      position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n      velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n    }\n\n    this._tempState.position = tempPosition;\n    this._tempState.velocity = tempVelocity;\n\n    this._currentState.position = position;\n    this._currentState.velocity = velocity;\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n    }\n\n    if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue;\n        this._currentState.position = this._endValue;\n      } else {\n        this._endValue = this._currentState.position;\n        this._startValue = this._endValue;\n      }\n      this.setVelocity(0);\n      isAtRest = true;\n    }\n\n    var notifyActivate = false;\n    if (this._wasAtRest) {\n      this._wasAtRest = false;\n      notifyActivate = true;\n    }\n\n    var notifyAtRest = false;\n    if (isAtRest) {\n      this._wasAtRest = true;\n      notifyAtRest = true;\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n  };\n\n  Spring.prototype.notifyPositionUpdated = function notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      if (notifyActivate && listener.onSpringActivate) {\n        listener.onSpringActivate(this);\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this);\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this);\n      }\n    }\n  };\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n\n\n  Spring.prototype.systemShouldAdvance = function systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest();\n  };\n\n  Spring.prototype.wasAtRest = function wasAtRest() {\n    return this._wasAtRest;\n  };\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n\n\n  Spring.prototype.isAtRest = function isAtRest() {\n    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);\n  };\n\n  /**\n   * Force the spring to be at rest at its current position. As\n   * described in the documentation for setCurrentValue, this method\n   * makes it easy to do synchronous non-animated updates to ui\n   * elements that are attached to springs via SpringListeners.\n   * @public\n   */\n\n\n  Spring.prototype.setAtRest = function setAtRest() {\n    this._endValue = this._currentState.position;\n    this._tempState.position = this._currentState.position;\n    this._currentState.velocity = 0;\n    return this;\n  };\n\n  Spring.prototype._interpolate = function _interpolate(alpha) {\n    this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);\n    this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);\n  };\n\n  Spring.prototype.getListeners = function getListeners() {\n    return this.listeners;\n  };\n\n  Spring.prototype.addListener = function addListener(newListener) {\n    this.listeners.push(newListener);\n    return this;\n  };\n\n  Spring.prototype.removeListener = function removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove);\n    return this;\n  };\n\n  Spring.prototype.removeAllListeners = function removeAllListeners() {\n    this.listeners = [];\n    return this;\n  };\n\n  Spring.prototype.currentValueIsApproximately = function currentValueIsApproximately(value) {\n    return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();\n  };\n\n  return Spring;\n}();\n\nSpring._ID = 0;\nSpring.MAX_DELTA_TIME_SEC = 0.064;\nSpring.SOLVER_TIMESTEP_SEC = 0.001;\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\n\nvar SpringSystem = function () {\n  function SpringSystem(looper) {\n    classCallCheck(this, SpringSystem);\n    this.listeners = [];\n    this._activeSprings = [];\n    this._idleSpringIndices = [];\n    this._isIdle = true;\n    this._lastTimeMillis = -1;\n    this._springRegistry = {};\n\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n  }\n\n  /**\n   * A SpringSystem is iterated by a looper. The looper is responsible\n   * for executing each frame as the SpringSystem is resolved to idle.\n   * There are three types of Loopers described below AnimationLooper,\n   * SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n   * the default as it is the most useful for common UI animations.\n   * @public\n   */\n\n\n  SpringSystem.prototype.setLooper = function setLooper(looper) {\n    this.looper = looper;\n    looper.springSystem = this;\n  };\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpring = function createSpring(tension, friction) {\n    var springConfig = void 0;\n    if (tension === undefined || friction === undefined) {\n      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n    } else {\n      springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n    }\n    return this.createSpringWithConfig(springConfig);\n  };\n\n  /**\n   * Add a spring with a specified bounciness and speed. To replicate Origami\n   * compositions based on PopAnimation patches, use this factory method to\n   * create matching springs.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithBouncinessAndSpeed = function createSpringWithBouncinessAndSpeed(bounciness, speed) {\n    var springConfig = void 0;\n    if (bounciness === undefined || speed === undefined) {\n      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n    } else {\n      springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n    }\n    return this.createSpringWithConfig(springConfig);\n  };\n\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithConfig = function createSpringWithConfig(springConfig) {\n    var spring = new Spring(this);\n    this.registerSpring(spring);\n    spring.setSpringConfig(springConfig);\n    return spring;\n  };\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getIsIdle = function getIsIdle() {\n    return this._isIdle;\n  };\n\n  /**\n   * Retrieve a specific Spring from the SpringSystem by id. This\n   * can be useful for inspecting the state of a spring before\n   * or after an integration loop in the SpringSystem executes.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getSpringById = function getSpringById(id) {\n    return this._springRegistry[id];\n  };\n\n  /**\n   * Get a listing of all the springs registered with this\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getAllSprings = function getAllSprings() {\n    var vals = [];\n    for (var _id in this._springRegistry) {\n      if (this._springRegistry.hasOwnProperty(_id)) {\n        vals.push(this._springRegistry[_id]);\n      }\n    }\n    return vals;\n  };\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n\n\n  SpringSystem.prototype.registerSpring = function registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring;\n  };\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n\n\n  SpringSystem.prototype.deregisterSpring = function deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring);\n    delete this._springRegistry[spring.getId()];\n  };\n\n  SpringSystem.prototype.advance = function advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop();\n    }\n    for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n      var spring = this._activeSprings[i];\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0);\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n      }\n    }\n    while (this._idleSpringIndices.length > 0) {\n      var idx = this._idleSpringIndices.pop();\n      idx >= 0 && this._activeSprings.splice(idx, 1);\n    }\n  };\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.loop = function loop(currentTimeMillis) {\n    var listener = void 0;\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1;\n    }\n    var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n    this._lastTimeMillis = currentTimeMillis;\n\n    var i = 0;\n    var len = this.listeners.length;\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis);\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true;\n      this._lastTimeMillis = -1;\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n    }\n\n    if (!this._isIdle) {\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n\n\n  SpringSystem.prototype.activateSpring = function activateSpring(springId) {\n    var spring = this._springRegistry[springId];\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring);\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false;\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Add a listener to the SpringSystem to receive before/after integration\n   * notifications allowing Springs to be constrained or adjusted.\n   * @public\n   */\n\n\n  SpringSystem.prototype.addListener = function addListener(listener) {\n    this.listeners.push(listener);\n  };\n\n  /**\n   * Remove a previously added listener on the SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.removeListener = function removeListener(listener) {\n    removeFirst(this.listeners, listener);\n  };\n\n  /**\n   * Remove all previously added listeners on the SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.removeAllListeners = function removeAllListeners() {\n    this.listeners = [];\n  };\n\n  return SpringSystem;\n}();\n\nvar index = _extends({}, Loopers, {\n  OrigamiValueConverter: OrigamiValueConverter,\n  MathUtil: MathUtil,\n  Spring: Spring,\n  SpringConfig: SpringConfig,\n  SpringSystem: SpringSystem,\n  util: _extends({}, util, MathUtil)\n});\n\nreturn index;\n\n})));\n",null,"import HorizontalScroll from '@oberon-amsterdam/horizontal';\n\nnew HorizontalScroll();\n"]}